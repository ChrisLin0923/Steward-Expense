.overlay {
	position: fixed;
	inset: 0;
	background-color: rgba(0, 0, 0, 0.5);
	backdrop-filter: blur(4px);
	z-index: 1000;
	opacity: 1;
	visibility: visible;
	animation: fadeInBackdrop 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.overlay.closing {
	animation: fadeOutBackdrop 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes fadeInBackdrop {
	0% {
		background-color: rgba(0, 0, 0, 0);
		backdrop-filter: blur(0px);
		opacity: 0;
	}
	100% {
		background-color: rgba(0, 0, 0, 0.5);
		backdrop-filter: blur(4px);
		opacity: 1;
	}
}

@keyframes fadeOutBackdrop {
	from {
		background-color: rgba(0, 0, 0, 0.5);
		backdrop-filter: blur(4px);
		opacity: 1;
	}
	to {
		background-color: rgba(0, 0, 0, 0);
		backdrop-filter: blur(0px);
		opacity: 0;
	}
}

.cardform {
	display: flex;
	flex-direction: column;
	background-color: var(--bg-white);
	padding: 32px 40px;
	border-radius: 24px;
	width: 90%;
	max-width: 440px;
	position: fixed;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	z-index: 1001;
	box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
	animation: popIn 0.5s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
}

/* Initial state for form elements */
.cardform form > * {
	opacity: 0;
	transform: translateY(20px);
}

/* Opening animations */
.cardform.visible form > * {
	animation: floatIn 0.4s ease forwards;
}

.cardform.visible form > *:nth-child(1) {
	animation-delay: 0.1s;
}
.cardform.visible form > *:nth-child(2) {
	animation-delay: 0.15s;
}
.cardform.visible form > *:nth-child(3) {
	animation-delay: 0.2s;
}
.cardform.visible form > *:nth-child(4) {
	animation-delay: 0.25s;
}
.cardform.visible form > *:nth-child(5) {
	animation-delay: 0.3s;
}
.cardform.visible form > *:nth-child(6) {
	animation-delay: 0.35s;
}

/* Closing animations */
.cardform.closing {
	animation: popOut 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.cardform.closing form > * {
	animation: floatOut 0.2s ease forwards;
}

.cardform.closing form > *:nth-child(1) {
	animation-delay: 0s;
}
.cardform.closing form > *:nth-child(2) {
	animation-delay: 0.03s;
}
.cardform.closing form > *:nth-child(3) {
	animation-delay: 0.06s;
}
.cardform.closing form > *:nth-child(4) {
	animation-delay: 0.09s;
}
.cardform.closing form > *:nth-child(5) {
	animation-delay: 0.12s;
}
.cardform.closing form > *:nth-child(6) {
	animation-delay: 0.15s;
}

@keyframes floatIn {
	from {
		opacity: 0;
		transform: translateY(20px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes floatOut {
	from {
		opacity: 1;
		transform: translateY(0);
	}
	to {
		opacity: 0;
		transform: translateY(-10px);
	}
}

@keyframes popIn {
	0% {
		transform: translate(-50%, -50%) scale(0.95);
		opacity: 0;
		box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
	}
	100% {
		transform: translate(-50%, -50%) scale(1);
		opacity: 1;
		box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
	}
}

@keyframes popOut {
	from {
		transform: translate(-50%, -50%) scale(1);
		opacity: 1;
		box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
	}
	to {
		transform: translate(-50%, -60%) scale(0.95);
		opacity: 0;
		box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
	}
}

h2 {
	color: var(--text-primary);
	font-size: 1.75rem;
	font-weight: 700;
	margin-bottom: 32px;
	text-align: center;
	letter-spacing: -0.5px;
}

.formGroup {
	margin-bottom: 28px;
	position: relative;
}

.formGroup label {
	display: block;
	margin-bottom: 10px;
	color: var(--text-secondary);
	font-size: 0.9rem;
	font-weight: 600;
	transition: color 0.2s;
}

.formGroup input,
.formGroup select {
	width: 100%;
	padding: 14px 18px;
	border: 2px solid var(--border-light);
	border-radius: 14px;
	font-size: 1rem;
	transition: all 0.3s ease;
	background-color: var(--bg-white);
	color: var(--text-primary);
}

.formGroup input:hover,
.formGroup select:hover {
	border-color: var(--border-focus);
	background-color: rgba(116, 185, 255, 0.03);
}

.formGroup input:focus,
.formGroup select:focus {
	outline: none;
	border-color: var(--btn-primary);
	box-shadow: 0 0 0 4px rgba(116, 185, 255, 0.1);
	background-color: var(--bg-white);
}

/* Style the select dropdown arrow */
.formGroup select {
	appearance: none;
	background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%23636e72' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M6 9l6 6 6-6'/%3E%3C/svg%3E");
	background-repeat: no-repeat;
	background-position: right 18px center;
	padding-right: 48px;
}

.formActions {
	display: flex;
	gap: 16px;
	margin-top: 36px;
}

.submitBtn,
.cancelBtn {
	flex: 1;
	padding: 14px;
	border: none;
	border-radius: 14px;
	font-weight: 600;
	font-size: 1rem;
	cursor: pointer;
	transition: all 0.3s ease;
}

.submitBtn {
	background-color: var(--btn-primary);
	color: var(--text-white);
	box-shadow: 0 4px 12px rgba(116, 185, 255, 0.2);
}

.submitBtn:hover {
	background-color: var(--btn-primary-hover);
	transform: translateY(-2px);
	box-shadow: 0 6px 16px rgba(116, 185, 255, 0.3);
}

.submitBtn:active {
	transform: translateY(0);
}

.cancelBtn {
	background-color: var(--bg-secondary);
	color: var(--text-secondary);
	border: 2px solid transparent;
}

.cancelBtn:hover {
	background-color: var(--bg-white);
	color: var(--text-primary);
	border-color: var(--border-light);
}

.visible {
	opacity: 1;
	visibility: visible;
	pointer-events: auto;
}

.hidden {
	opacity: 0;
	visibility: hidden;
	pointer-events: none;
}

@keyframes fadeBackdrop {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

/* Responsive adjustments */
@media screen and (max-width: 480px) {
	.cardform {
		width: 90%;
		height: auto;
		max-height: 78vh;
		padding: 0.5rem;
		border-radius: 16px;
		transform: none;
		top: 52%;
		overflow-y: auto;
	}

	h2 {
		font-size: 1.25rem;
		margin-bottom: 16px;
	}

	.formGroup {
		margin-bottom: 16px;
	}

	.formGroup input,
	.formGroup select,
	.submitBtn,
	.cancelBtn {
		padding: 12px;
		font-size: 16px;
	}

	.formActions {
		margin-top: 12px;
		padding-bottom: env(safe-area-inset-bottom);
	}
}

/* Add styles for the edit form container */
.editFormContainer {
	position: fixed;
	z-index: 101;
	/* ... other styles ... */
}

.onboardingForm {
	background: transparent;
	width: 100%;
	animation: fadeInContent 0.4s ease-out forwards;
}

.compactForm {
	display: flex;
	flex-direction: column;
	opacity: 1;
	transform: none;
}

.inputGroup {
	margin-bottom: 1.5rem;
}

.inputGroup label {
	display: block;
	margin-bottom: 0.5rem;
	color: var(--text-primary);
	font-size: 0.9rem;
	font-weight: 500;
}

.onboardingInput,
.onboardingSelect {
	width: 100%;
	padding: 0.75rem;
	border: 1px solid var(--border-light);
	border-radius: 0.5rem;
	background: var(--bg-primary);
	color: var(--text-primary);
	font-size: 1rem;
	transition: all 0.2s ease;
}

.onboardingInput:focus,
.onboardingSelect:focus {
	outline: none;
	border-color: var(--bg-primary);
	box-shadow: 0 0 0 2px rgba(var(--bg-primary), 0.1);
}

.onboardingSubmitBtn {
	display: flex;
	align-self: center;
	width: fit-content;
	padding: 0.75rem;
	margin-top: 1rem;
	border: none;
	border-radius: 0.5rem;
	font-weight: 500;
	font-size: 1rem;
	cursor: pointer;
	transition: all 0.2s ease;
	background-color: var(--btn-primary);
	color: var(--btn-text-primary);
	animation: pulseGlow 3s ease-in-out infinite;
}

.onboardingSubmitBtn:hover {
	transform: translateY(-1px);
	filter: brightness(1.1);
	box-shadow: 0 4px 12px rgba(var(--primary-rgb), 0.2);
}

.formActions {
	display: flex;
	justify-content: center;
	margin-top: 2rem;
}

@keyframes pulseGlow {
	0% {
		box-shadow: 0 0 0 0 rgba(214, 244, 220, 0.7);
		transform: scale(1);
	}
	50% {
		box-shadow: 0 0 20px 5px rgba(214, 244, 220, 0.3);
		transform: scale(1.02);
	}
	100% {
		box-shadow: 0 0 0 0 rgba(214, 244, 220, 0);
		transform: scale(1);
	}
}

@keyframes fadeInContent {
	from {
		opacity: 0;
		transform: translateY(10px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

/* Add these new styles */

.toggleButtonGroup {
	background-color: var(--bg-secondary);
	display: flex;
	gap: 0.5rem;
	border-radius: 1rem;
	padding: 0.4rem;
	margin-bottom: 1.5rem;
	width: 100%;
	box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.05);
}

.toggleButton {
	flex: 1;
	padding: 0.75rem 1.5rem;
	border: none;
	border-radius: 0.8rem;
	font-size: 1rem;
	font-weight: 500;
	transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
	position: relative;
	overflow: hidden;
}

/* Unselected state */
.toggleButton[aria-pressed="false"] {
	background-color: transparent;
	color: var(--text-secondary);
}

.toggleButton[aria-pressed="false"]:hover {
	background-color: rgba(var(--primary-rgb), 0.05);
	color: var(--text-primary);
	transform: translateY(-1px);
}

/* Selected state */
.toggleButton[aria-pressed="true"] {
	background-color: var(--btn-primary);
	color: var(--btn-text-primary);
	font-weight: 600;
	transform: scale(1.02);
	box-shadow: 0 2px 8px rgba(var(--primary-rgb), 0.2),
		0 0 0 1px rgba(var(--primary-rgb), 0.1);
}

/* Income specific styles */
.toggleButton[value="income"][aria-pressed="true"] {
	background: linear-gradient(135deg, #2ecc71, #27ae60);
}

/* Expense specific styles */
.toggleButton[value="expense"][aria-pressed="true"] {
	background: linear-gradient(135deg, #e74c3c, #c0392b);
}

/* Active state animation */
.toggleButton:active {
	transform: scale(0.98);
}

/* Ripple effect */
.toggleButton::after {
	content: "";
	position: absolute;
	top: 50%;
	left: 50%;
	width: 100%;
	height: 100%;
	background-color: rgba(255, 255, 255, 0.1);
	border-radius: inherit;
	transform: translate(-50%, -50%) scale(0);
	opacity: 0;
	transition: transform 0.4s ease-out, opacity 0.3s ease-out;
}

.toggleButton:active::after {
	transform: translate(-50%, -50%) scale(2);
	opacity: 1;
	transition: 0s;
}

/* Disable default outline and add custom focus state */
.toggleButton:focus {
	outline: none;
}

.toggleButton:focus-visible {
	box-shadow: 0 0 0 2px var(--bg-primary),
		0 0 0 4px rgba(var(--primary-rgb), 0.3);
}
